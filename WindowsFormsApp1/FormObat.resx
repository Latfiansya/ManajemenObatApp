<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBack.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>